<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SpringCloud</title>
      <link href="/2020/06/29/SpringCloud/"/>
      <url>/2020/06/29/SpringCloud/</url>
      
        <content type="html"><![CDATA[<h1 id="递四方速递"><a href="#递四方速递" class="headerlink" title="递四方速递"></a>递四方速递</h1>]]></content>
      
      
      <categories>
          
          <category> Java技术栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> 框架 </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot</title>
      <link href="/2020/06/29/SpringBoot/"/>
      <url>/2020/06/29/SpringBoot/</url>
      
        <content type="html"><![CDATA[<h1 id="啥"><a href="#啥" class="headerlink" title="啥"></a>啥</h1>]]></content>
      
      
      <categories>
          
          <category> Java技术栈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> 框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ELK记录</title>
      <link href="/2020/06/29/ELK%E8%AE%B0%E5%BD%95/"/>
      <url>/2020/06/29/ELK%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="ELK"><a href="#ELK" class="headerlink" title="ELK"></a>ELK</h1><p>ELK由beats来采集数据直接存入或通过logstash存入ElasticSearch，最终由kibana数据展示</p><h2 id="restful"><a href="#restful" class="headerlink" title="restful"></a>restful</h2><p>一种软件架构风格，<strong>既不是标准也不是规范</strong>，是一种风格。符合rest架构风格为restful</p><p>什么是rest</p><p>REST（Resource（资源） representation（表现层） State（状态） Tranfer（转换））</p><p>REST： 一组设计原则设计约束</p><p>REST设计原则</p><p>1.使用rest的url替换传统的url </p><p>​    传统url：<a href="http://localhost：8080/xxx/find?id=1">http://localhost：8080/xxx/find?id=1</a></p><p>​    resturl: <a href="http://localhost:8080/xxx/find/if/1" target="_blank" rel="noopener">http://localhost:8080/xxx/find/if/1</a></p><p>2.使用Http四种动词对应服务器四种操作：CRUD</p><p>HTTP动词：GET 查询 POST添加 /更新PUT更新/添加 DELET删除</p><p>Put 和POST 添加和更新可能都可以用 PUT幂等性</p><h2 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h2><p>ES基Lucene的搜索服务器，由java开发的分布式多用户全文检索，开源免费。是ELK的核心。Restful风格；<strong>速度极快</strong>。　</p><p>Lucene是一套信息检索工具包不包含搜索引擎。包含索引结构，读写索引工具！排序、搜索规则。。。工具类</p><p><code>elasticsearch是基于Lucene做了一些封装和增强。</code></p><p>slor也是，solr对死数比较好，搭建集群需要zookeeper，solr 支持多种数据格式xml csv json</p><p>es对活数据比较好，自身支持集群搭建，只支持json</p><h2 id="倒排索引"><a href="#倒排索引" class="headerlink" title="倒排索引"></a>倒排索引</h2><p>将存放的数据，一定的方式进行分词，并且将分词的内容放在单独的分词表中。当用户查询数据时，会将用户的查询关键字进行分词。然后去分词库去匹配相关内容最终得到数据的id标识，然后根据标识去数据位置拉取数据</p><p><img src= "/img/loading.gif" data-src="/Users/zhangliming/Desktop/%E7%AC%94%E8%AE%B0/ELK/Images/image-20200622222937796.png" alt="image-20200622222937796"></p><h2 id="正排索引"><a href="#正排索引" class="headerlink" title="正排索引"></a>正排索引</h2><p>分词后将全文本去模糊匹配，找到了就把该条目录加入</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>redis</title>
      <link href="/2020/06/29/redis%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/"/>
      <url>/2020/06/29/redis%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis笔记"><a href="#Redis笔记" class="headerlink" title="Redis笔记"></a>Redis笔记</h1><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h3><h4 id="1-1-1"><a href="#1-1-1" class="headerlink" title="1.1.1"></a>1.1.1</h4><h3 id="1-2"><a href="#1-2" class="headerlink" title="1.2"></a>1.2</h3><h4 id="1-2-1"><a href="#1-2-1" class="headerlink" title="1.2.1"></a>1.2.1</h4><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><h3 id="2-1"><a href="#2-1" class="headerlink" title="2.1"></a>2.1</h3><h4 id="2-1-1"><a href="#2-1-1" class="headerlink" title="2.1.1"></a>2.1.1</h4>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> 缓存 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> Nosql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
